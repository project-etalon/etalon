Metrics
=======

``metron`` provides a set of metrics to evaluate the performance of LLM inference systems. These metrics are designed to capture the nuances of LLM inference process and its impact on real-time user experience. 


``metron`` also enables visualizing these metrics to understand and compare the performance across different LLM inference systems. Check out the following to learn more:

.. toctree::
    :maxdepth: 1

    visualizing_metrics

The description of each metric is provided below:

Time to First Token (TTFT)
^^^^^^^^^^^^^^^^^^^^^^^^^^

It is defined as the time taken between arrival and first output token generated by system for each request. TTFT includes both scheduling delay and prompt processing time. Lower TTFT is better.

Time Between Tokens (TBT)
^^^^^^^^^^^^^^^^^^^^^^^^^

It is defined as the time taken between two consecutive output tokens generated by system for each request. Lower TBT is better.

Time Per Output Token (TPOT)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

It is defined as total time taken to generate all output tokens divided by the number of output tokens generated. Lower TPOT is better.

Normalized Latency
^^^^^^^^^^^^^^^^^^

It is defined as total execution time of request divided by the number of output tokens generated. It includes scheduling delay, prompt generation time and time taken to generate all decode tokens. Lower Normalized Latency is better.

*unified-deadline*
^^^^^^^^^^^^^^^^^^

.. note::

    *unified-deadline* is a new metric introduced by ``metron`` to evaluate LLM inference systems. It is designed to capture the nuances of LLM inference process and its impact on real-time user experience.


Given prefill SLO and TBT SLO, *unified-deadline* is defined as token deadline miss rate of a given request. It accounts for slack which is the difference between actual time taken to generate token and deadline for that token. That slack is used by subsequent tokens if current token is generated before deadline. Lower *unified-deadline* is better.

More formally, let prefill SLO be :math:`D_p` and TBT SLO be :math:`D_d`. Every token generation is characterized as a periodic task :math:`r_i = (t_i, d_i, s_i)`, where :math:`t_i` is the arrival time of :math:`i^{th}` token, :math:`d_i` is deadline for :math:`i^{th}` token,  (i.e., :math:`t_i + D + slack_{i-1}`, where :math:`D = D_p` if first token else :math:`D = D_d`) and :math:`s_i` is the actual time taken to generate :math:`i^{th}` token. 

If :math:`s_i \leq d_i`, then :math:`slack_{i} = slack_{i-1} + d_i - s_i`, else :math:`slack_{i} = 0`. :math:`slack_{0} = 0` for first token.

The *unified-deadline* is calculated as follows: 

.. math::

    \textit{unified-deadline miss rate} = \frac{\sum_{i=1}^{n} \mathbb{I}\{s_i > d_i\}}{n} 
    
, where :math:`\mathbb{I}\{s_i > d_i\} = 1` if :math:`s_i > d_i` else :math:`0` and :math:`n` is the number of decode tokens generated.

